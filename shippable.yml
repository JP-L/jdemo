--- 
branches: 
  only: 
    - master
    - release
    - development
build: 
  cache: false
  ci: 
    - "echo \"============ Prepare Gradle environment =============\""
    - "mkdir -p $HOME/.gradle"
    - "printenv | grep SONARQUBE_PROP | cut -d'=' -f 2- >> $HOME/.gradle/gradle.properties"
    - "echo \"========== Building the Java application ===========\""
    - "gradle assemble"
    - "echo \"========== Test and Quality control for the Java application ===========\""
    - "gradle test"
    - "gradle sonarqube"
  on_failure: 
    - "echo \"Build failed\""
  on_success: 
    - "echo \"Build succeeded\""
  post_ci: 
    - "bash <(curl -s https://codecov.io/bash) -f shippable/codecoverage/coverage.xml"
  pre_ci: 
    - "echo \"============ Prepare environment =============\""
    - "mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR"
    - "pushd $TESTS_LOC_DIR"
    - "if [ \"$BRANCH\" == \"development\" ]; then echo \"this is development branch\"; fi"
    - "if [ \"$BRANCH\" == \"release\" ]; then echo \"this is release branch\"; fi"
    - "if [ \"$BRANCH\" == \"master\" ]; then echo \"this is master branch\"; fi"
  pre_ci_boot: 
    image_name: 791079558361.dkr.ecr.eu-west-1.amazonaws.com/jpl/u16jav
    image_tag: "1.0"
    options: "--privileged=false --net=bridge -e FOO=true -e BOO=false"
    pull: true
env: 
  global: 
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
    - 
      secure: fWbSEfoReUNWBBHoiu5KbwNUxKxk/AZcPxooPXtApaTLWOKDXUVboSNUHY2OO7PsjZMiNRggSm8VFQZi5perVjB9zUWPYEPrWUIpdaYAuemqYIKm8uRHLT6p8FRTEYY0YqsnasA1AZXRVhj9++Kgj9Sy9SRQ5G189uXHpYDUsvP+XbfEyI9lgIXWXuhCbQdkb0fglfzGnGNX1mE2QT7uXpio9Lpv0cCUzABeOAPd4Ea3qp8k6AmnAOGKzKc0+LlIiFG+mAvTdFy0e0RWQy5CP40ae8mfissUcUEr6hPbxOF2zedCr0BhXmYOvoSWlLY9NjU6CHGQL7t03HQQq4BL/Q==
integrations: 
  hub: 
    - 
      integrationName: AWS-ECR
      region: eu-west-1
      type: ecr
  notifications: 
    - 
      branches: 
        only: 
          - master
          - release
          - development
      integrationName: Slack
      on_failure: always
      on_pull_request: always
      on_start: always
      on_success: always
      recipients: 
        - "#jdemo"
      type: slack
jdk: 
  - oraclejdk8
jobs: 
  - 
    dependencyMode: immediate
    flags: 
      - jdemo
    name: development_runCI
    steps: 
      - 
        OUT: jdemo-dev-image
    type: runCI
  - 
    dependencyMode: chrono
    flags: 
      - jdemo
    name: release_runCI
    steps: 
      - 
        IN: develop_runCI
      - 
        OUT: jdemo-release-image
    type: runCI
  - 
    dependencyMode: strict
    name: master_runCI
    steps: 
      - 
        IN: release_runCI
      - 
        OUT: jdemo-image
    type: runCI
language: java
resources: 
  - 
    flags: 
      - jdemo
    integration: "??? AWS, Artifactory, Nexus Pro??"
    name: jdemo-dev-image
    pointer: 
      sourceName: ""
    seed: 
      versionName: latest-dev
    type: image
  - 
    flags: 
      - jdemo
    integration: "??? AWS, Artifactory, Nexus Pro??"
    name: jdemo-release-image
    pointer: 
      sourceName: ""
    seed: 
      versionName: latest-release
    type: image
  - 
    flags: 
      - jdemo
    integration: Docker
    name: jdemo-image
    pointer: 
      sourceName: ""
    seed: 
      versionName: latest
    type: image
  - 
    flags: 
      - jdemo
    name: jdemo-params
    type: params
    version: 
      params: 
        ENVIRONMENT: dev
        PORT: 8080
  - 
    flags: 
      - deploy-ecs-basic
    name: jdemo-dockerOptions
    type: dockerOptions
    version: 
      cpuShares: 10
      logConfig: 
        options: 
          awslogs-group: jdemo
          awslogs-region: eu-west-1
        type: awslogs
      memory: 1024
      portMappings: 
        - "8080:8080"
      privileged: false
  - 
    flags: 
      - jdemo
    name: jdemo-replicas
    type: replicas
    version: 
      count: 1
  - 
    flags: 
      - jdemo
    integration: Provider-AWS
    name: deploy-ecs-cluster
    pointer: 
      region: eu-west-1
      sourceName: aws-ecs-cluser
    type: cluster
